Problem:

Two random integer arrays/lists have been given as ARR1 and ARR2 of size N and M respectively. 
Both the arrays/lists contain numbers from 0 to 9(i.e. single digit integer is present at every index). 
The idea here is to represent each array/list as an integer in itself of digits N and M.
You need to find the sum of both the input arrays/list treating them as two integers and put the result in another array/list 
i.e. output array/list will also contain only single digit at every index.

****************************************************************************************************************************************************
Program:

// input1 - first array
// size1 - size of first array
// input2 - second array
// size2 - size of second array
// output - array in which sum is to be stored

void sumOfTwoArrays(int input1[], int size1, int input2[], int size2, int output[]){
    /* Don't write main().
     * Don't read input, it is passed as function argument.
     * No need to print or return the output. Just fill the output in given output array.
     * Taking input and printing output is handled automatically.
     */
int i,n,m,p,s,c=0;
    if(size1 >= size2)
        n=size1+1;
    else
        n=size2+1;
    
    for(i=n-1;i>=1;i--)
    {
        if(size1>=1)
            m=input1[size1 - 1];
        else
            m=0;
        if(size2>=1)
            p=input2[size2 - 1];
        else
            p=0;
        
        s=m+p+c;
        
        if(i>1)
        {  
            if(s>=10)
            
            {
                output[i] = s%10;
                c=1;
            }
            else
            {
                output[i] =s%10;
                c=0;
            }
            
            
        }
            
            
        else
        {
            if(s>=10)
            {
                output[i]=s%10;
                output[i-1]=1;
            }
            else
            {
                output[i]=s;
                output[i-1]=0;
            }
           
        }
        size1--;
        size2--;
        
        
    }
}

****************************************************************************************************************************************************
Output:

Sample Input:
3
6 2 4
3
7 5 6
Sample Output:
1 3 8 0
