Problem:

Given an integer array A of size n. Find and print all the leaders present in the input array. 
An array element A[i] is called Leader, if all the elements following it (i.e. present at its right) are less than or equal to A[i].
Print all the leader elements separated by space and in the same order they are present in the input array.

********************************************************************************************************************************************
Program:

void Leaders(int* arr,int len)
{
	/* Don't write main().
	 * Don't read input, it is passed as function argument.
	 * Print your output exactly in the same format as shown. 
	 * Don't print any extra line.
	*/
    
    int m =  arr[len-1]; 
  int b[len],j=1,i;
    b[0]=m;
    //cout << m << " "; 
      
    for (int i = len-2; i >= 0; i--) 
    { 
        if (m <= arr[i]) 
        {            
            m = arr[i]; 
            b[j]=m;
            j++;
           // cout << m<< " "; 
        } 
    } 
    for(i=j-1;i>=0;i--)
    {cout<<b[i]<<' ';}
}

********************************************************************************************************************************************
Output:

Sample Input:
6
3 12 34 2 0 -1
Sample Output:
34 2 0 -1

Sample Input:
5
13 17 5 4 6
Sample Output:
17 6
